@mixin clearfix {
  &::after {
    // 'clearfix' method for clearing floats
    // content needs to be specified for element to be part of DOM, but we don't want to see anything
    content: "";
    display: table;
    clear: both;
  }
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  /* positions in relation to self; moves left 50% of div width from left side, moves up 50% of div height from top*/
  transform: translate(-50%, -50% );
}

// jonas' mixin created after mine
// @mixin absCenter {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: translate(-50%, -50% );
// }

/*
---------------------
  MEDIA QUERY MNGR
---------------------

0 - 600px: phone
600 - 900px: tablet portrait
900 - 1200px: tablet landscape
1200 - 1800px: desktop (normal styles for desktop-first approach)
1800px + : big desktop

$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

Order: Base + typography > general layout + grid > page layout > components

1em = 16px (browser default)

*/

// example of import without func argument
// @mixin respond-phone {
//   @media (max-width: 600px) { @content };
// }

@mixin respond($breakpoint) {
  // @if $breakpoint == tiny { // for testing, delete later
  //   // 500px / 16px = 31.25em
  //   @media (max-width: 31.25em) { @content }; // 500px
  // }
  @if $breakpoint == phone {
    // 600px / 16px = 37.5em
    @media only screen and (max-width: 37.5em) { @content }; // 600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) { @content }; // 900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) { @content }; // 1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) { @content }; // 1800px
  }
  @if $breakpoint == huge-desktop {
    @media only screen and (min-width: 120em) { @content };
  }
}